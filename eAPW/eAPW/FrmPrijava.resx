<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAY4AAADYCAIAAABzxpN1AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAFjFJREFUeF7tnf2PJMddh/kXfLe3t2+3s+9vwkAsFKFIEJ1iZIIMESFENmBhYUGi
        4PwQiRWKEmLAGBQgEIEUYSWCRLECsRL7SM7JZm9v7+wLkaMIZEX8QXzkHrfaVdXVVdPVs/OdfR59ZFl7
        MzXdPVVPV3VX1/zMfQCAmQdVAYABUBUAGABVAYABUBUAGABVAYABUBUAGABVAYABUBUAGABVAYABUBUA
        GABVAYABUBUAGABVAYABUBUAGABVAYABUBUAGABVAYABUBUAGABVAYABUBUAGABVAYABUBUAGABVAYAB
        UBUAGABVAYABUBUAGABVAYABUBUAGABVAYABUBUAGABVAYABUBUAGABVAYABUBUAGABVAYABUBUAGABV
        AYABUBUAGABVAYABUBUAGABVAYABUBUAGABVAYABUBUAGABVAYABUBUAGABVAYABUBUAGABVAYABUBUA
        GABVAYABUBUAGABVAYABUBUAGABVAYABUBUAGABVAYABUBUAGABVAYABUBUAGABVAYABUBUAGABVAYAB
        UBUAGABVAYABUBUAGABVAYABUBUAGABVAYABUBUAGABVAYABUBUAGABVAYABUBUAGABVAYABUBUAGABV
        AYABUNVc8Y2XXho0t159dfxJUU5PT503DpGTk5Px53Vx79495725GRcUwnllbiKHVDvovDg344LmAlQ1
        P6hqrl59aOh0NoDpbEaVqkEqZ2dn44/3KLI9KkT+HZf4Dq/dvl2q8HGJDUqVHCzcIqhqTihSsxMTqf3T
        3Awn+mi5Y7wd71B2e87v3h2X+zYFC3cOadnN9g+LRVDVPFC2ZqfEaVoV098MP9qGetvunZ87/9ozzb0u
        vrPDFd4s2S6oah4o3mw6E6z909+MtlSbN8T21JeWihdeH9IhNrsu3C6oyjxqPE69nEL8qn/v3j3nNReb
        IRq8Uu34QIXrGA5UuP99mQNVmcev2ZsLVx5fXvrtleVS+dWl6+vv/gjFuXXlG1Nv0RudoibOB5evP3zt
        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
        9Xz1AAAAAElFTkSuQmCC
</value>
  </data>
</root>